                 设计模式之：策略模式
思想：将对象与方法分开，定义了算法族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化独立于使用算法的客户。

问题：
在利用继承的方式定义子类时，不同子类的相应方法的实现可能不同（比如一个鸭子父类有一个名叫的方法，但不同种类的鸭子的叫声可能是不同的或者假鸭子的是不能叫的）,
解决：
这时我们就可以将方法与对象分开分别定义，将方法从父类中拿出来定义一个接口类并建立不同的方法子类继承这个接口并实现其中的方法，然后在对象父类中声明这个接口变量，在不同的对象子类中利用new关键字对其进行实例化
（例如给鸭子父类建立一个 QuakcBehavior接口其中有个quack()方法，然后建立不同的类继承这个接口并实现其中
的quack()方法，在定义鸭子子类时再从接口中找到符合该子类的相应的quack()方法）
设 计 大 师 关 心 的 是
建立弹性的设计，可以维护，
可以应付改变。
良好的 O O设计必须具备
可 复 用 、 可 扩 充 、 可 维 护
三个特性。